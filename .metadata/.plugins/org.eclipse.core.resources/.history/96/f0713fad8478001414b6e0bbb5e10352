<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	
	<xsl:output method="xml" indent="yes"></xsl:output>
	
	 <xsl:template match="/">
     <CarTypes>
	  <xsl:apply-templates></xsl:apply-templates>
	 </CarTypes>
	</xsl:template>
	
	 <xsl:template match="CarType">
	   <CarType>
	 <xsl:copy-of select="CarTypeName | CarTypeCode"> </xsl:copy-of>
          
         <xsl:apply-templates select="PossibleModels"></xsl:apply-templates>
       </CarType>      
	 </xsl:template>		  
	 
	 <xsl:template match="PossibleModels"> 
	 		<xsl:call-template name="check">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="separator">,</xsl:with-param>
      </xsl:call-template>
        
        <xsl:template name="check">
    <xsl:param name="text"/>
    <xsl:param name="separator" />
    <xsl:choose>
        <xsl:when test="not(contains($text, $separator))">
            <Model>
                <xsl:value-of select="normalize-space($text)"/>
            </Model>
        </xsl:when>
        <xsl:otherwise>
            <Rate>
                <xsl:value-of select="normalize-space(substring-before($text, $separator))"/>
            </Rate>
            <xsl:call-template name="check">
                <xsl:with-param name="text" select="substring-after($text, $separator)"/>
                <xsl:with-param name="separator" select="$separator"/>
            </xsl:call-template>
        </xsl:otherwise>
    </xsl:choose>
</xsl:template>
              
             
    </xsl:template>
 
</xsl:stylesheet>