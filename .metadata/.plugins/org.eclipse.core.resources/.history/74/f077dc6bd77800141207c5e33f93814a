package carrental;


import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.ProtocolException;
import java.net.URL;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
 

import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;

import Model.CarType;

public class CarRentalWebServiceClient {
	
	private String hotwireApi = "http://api.hotwire.com/v1/search/car?apikey=a72bv5sr5g7vukdffta6v3z2&DEST&STARTDATE&ENDDATE&PICKUPTIME&DROPOFFTIME";
	
	
	// http://api.hotwire.com/v1/search/car?apikey=a72bv5sr5g7vukdffta6v3z2&dest=LAX&startdate=12/03/2014&enddate=12/04/2014&pickuptime=10:00&dropofftime=23:30

	public CarType getCarTypeInformation ()
	{
		String startdate, enddate, pickuptime, dropofftime , dest;
		
		dest = "LAX";
		startdate = "12/03/2014";
		enddate = "12/04/2014";
		pickuptime = "10:00";
		dropofftime = "23:30";
		
		/*
		Map<String,String> tokens = new HashMap<String,String>();
		tokens.put("DEST", "dest=" + dest);
		tokens.put("STARTDATE", "startdate=" + startdate);
		tokens.put("ENDDATE", "enddate=" + enddate);
		tokens.put("PICKUPTIME", "pickuptime=" + pickuptime);
		tokens.put("DROPOFFTIME", "dropofftime=" + dropofftime);*/
		
		String urlStr = hotwireApi.replace("DEST", "dest=" + dest).
				replace("STARTDATE", "startdate=" + startdate).
				replace("ENDDATE", "enddate=" + enddate).
				replace("PICKUPTIME", "pickuptime=" + pickuptime).
				replace("DROPOFFTIME", "dropofftime=" + dropofftime);
		
		System.out.println(urlStr);
		try {
		URL url = new URL(urlStr);
		HttpURLConnection connection = (HttpURLConnection) url.openConnection();
		connection.setRequestMethod("GET");		
		InputStream stream = connection.getInputStream();		
		InputStreamReader reader = new InputStreamReader(stream);
		BufferedReader buffer = new BufferedReader(reader);
		String line;
		String xml = "";
		while((line = buffer.readLine()) != null) {
			xml += line;
		}
		File file = new File("C:/Users/Guna/eclipseworkspace/DbmsProject/CarRental/WebContent/output.xml");
		 // if file doesn't exists, then create it 
	    if ( ! file.exists( ) )
	    {
	        file.createNewFile( );
	    }
	    FileWriter fw = new FileWriter(file.getAbsoluteFile( ) );
	    BufferedWriter bw = new BufferedWriter(fw);		   
	    bw.write(xml);
	    bw.close( );
	  
		
		} catch (ProtocolException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
		
		 
	}

	
	public void writeCarTypetoXml()
	{
		File inputXmlFile = new File("/Users/Guna/eclipseworkspace/DbmsProject/CarRental/WebContent/output.xml");
		File xsltFile = new File("/Users/Guna/eclipseworkspace/DbmsProject/CarRental/WebContent/extractAllCarTypes.xsl");
		File outputXmlFile = new File("/Users/Guna/eclipseworkspace/DbmsProject/CarRental/WebContent/allCarTypes-out.xml");
	
	
		StreamSource inputXml = new  StreamSource(inputXmlFile);
		StreamSource xslt = new StreamSource(xsltFile);
		StreamResult outputXml = new StreamResult(outputXmlFile);
		TransformerFactory tf = TransformerFactory.newInstance();
		try {
			Transformer tx = tf.newTransformer(xslt);
			tx.transform(inputXml, outputXml);
		} catch (TransformerConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (TransformerException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		System.out.println("Check XML File");		
		
	}
	
	public static void main(String[] args) {
		CarRentalWebServiceClient o = new CarRentalWebServiceClient();
		System.out.println(o.getCarTypeInformation());
		o.writeCarTypetoXml();
        
		String = "Santro, Verna, Maruthi, Swift";
		
		
		
		
	}

}
